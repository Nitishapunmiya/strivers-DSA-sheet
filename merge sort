class Solution {
public:
    void merge(vector<int>& arr, int left, int mid, int right) {
        int i = left;
        int j = mid + 1;
        vector<int> temp;

        while (i <= mid && j <= right) {
            if (arr[i] <= arr[j]) {
                temp.push_back(arr[i++]);
            } else {
                temp.push_back(arr[j++]);
            }
        }

        while (i <= mid) {
            temp.push_back(arr[i++]);
        }

        while (j <= right) {
            temp.push_back(arr[j++]);
        }

        // Copy back to original array
        for (int k = left; k <= right; ++k) {
            arr[k] = temp[k - left];
        }
    }

    void mergeSort(vector<int>& arr, int left, int right) {
        if (left < right) {
            int mid = (left + right) / 2
